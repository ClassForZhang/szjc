<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx.xsd 
				      	http://www.springframework.org/schema/context  
				       	http://www.springframework.org/schema/context/spring-context.xsd
				       	http://www.springframework.org/schema/aop
				       	http://www.springframework.org/schema/aop/spring-aop.xsd">
						
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.cn.test.service" />
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">
            <list>  
               <value>classpath*:props/jdbc.properties</value>
               <value>classpath*:props/shiro.properties</value>
            </list>  
        </property>  
    </bean>  
	<!-- MySql数据库 -->
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" 
	    p:driverClassName="com.mysql.jdbc.Driver"
	    p:url="jdbc:mysql://localhost:9906/itsm?characterEncoding=UTF-8"
	    p:username="root"
	    p:password="secret@chinawiserv">
	</bean> -->
	
	<!-- MySql数据库 -->
	<bean id="dataSource_szjc" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	    <property name="driverClassName" value="${driver}" />  
        <property name="url" value="${url}" /> 
        <property name="username" value="${username}" />  
        <property name="password" value="${password}" /> 
	</bean>
	
	<!-- oracle数据库 -->
	<bean id="dataSource_itsm" class="org.springframework.jdbc.datasource.DriverManagerDataSource">   
      <!-- 数据库驱动 -->
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <!-- 连接URL串 -->
        <property name="url" value="${jdbc.url}" />
        <!-- 连接用户名 -->
        <property name="username" value="${jdbc.username}" />
        <!-- 连接密码 -->
        <property name="password" value="${jdbc.password}" />
        
    </bean> 
    
    <!-- 下面的是切换数据库的自定义类 -->
	<bean id="multipleDataSource" class="com.cn.test.controller.MultipleDataSource">
		<property name="defaultTargetDataSource" ref="dataSource_szjc"></property>
		<property name="targetDataSources">
	<map>
		<entry key="dataSource_szjc" value-ref="dataSource_szjc"></entry>
		<entry key="dataSource_itsm" value-ref="dataSource_itsm"></entry>
	</map>
	</property>
	</bean>
    
    
	<!-- sqlSessionFactory -->
	<bean id="sxSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <!-- 指定sqlSessionFactory的数据源 -->
	    <property name="dataSource" ref="multipleDataSource" />
	    <!-- mybatis配置文件路径 -->
	    <property name="configLocation" value="classpath:config/mybatis-config.xml"></property>
	    <!-- 映射文件路径 -->
	    <property name="mapperLocations">
	        <list>
	            <value>classpath*:com/cn/test/mapper/*.xml</value>
	        </list>
	    </property>
	</bean>
	
	<!-- spring和mybatis整合 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	    <property name="basePackage" value="com.cn.test.dao"></property>
	    <!-- <property name="sqlSessionFactory" ref="sxSqlSessionFactory"></property> -->
	    <property name="sqlSessionFactoryBeanName" value="sxSqlSessionFactory"/> 
	</bean>
	
	<!-- shiro配置 -->
    <import resource="applicationContext-shiro.xml"/>
	
	
	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="multipleDataSource" />
	</bean>
	
	<!-- 事务配置 -->
	<tx:advice transaction-manager="transactionManager" id="txAdivce">
	    <tx:attributes>
	        <tx:method name="*" rollback-for="RuntimException"/>
	    </tx:attributes>
	</tx:advice>
	
	<!-- 配置事务的切面 -->
	<aop:config>
	    <!-- 事务配置在service层 -->
	    <aop:pointcut expression="execution(public * com.cn.test.service..*.*(..))" id="aopPoint"/>
	    <aop:advisor advice-ref="txAdivce" pointcut-ref="aopPoint"/>
	</aop:config>
	
	
	
	
</beans>