package com.cn.test.controller;

import java.io.UnsupportedEncodingException;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.cn.test.entity.CivilizedEvaluation;
import com.cn.test.entity.CivilizedPublish;
import com.cn.test.entity.UserEntity;
import com.cn.test.service.CivilizedPublishService;
import com.cn.test.service.CivilizedService;
import com.cn.test.utils.Constant;
import com.cn.test.utils.DateUtil;
import com.cn.test.utils.ResultHelper;
import com.cn.test.utils.ResultHelperEasyui;

@Controller
@RequestMapping("/civilizedService")
public class CivilizedServiceController {
	@Resource
	private CivilizedService civilizedService;
	
	@Resource
	private CivilizedPublishService civilizedPublishService;
	
	@RequestMapping("/civilizedForm.action")
	public String civilizedForm(String publish_id,ModelMap modelMap){
		if(publish_id!=""){
			modelMap.put("publish_id", publish_id);
		}
		return "/civilizedForm";
	}
	
	@ResponseBody
	@RequestMapping("getData.action")
	public Object getFormData(CivilizedEvaluation civilizedEvaluation){
		List<CivilizedEvaluation> list=null;
		if(civilizedEvaluation.getStartTime()!=""){
			String time1=civilizedEvaluation.getStartTime().replace("-", "");
			civilizedEvaluation.setStartTime(time1);
		}
		if(civilizedEvaluation.getEndTime()!=""){
			String time2=civilizedEvaluation.getEndTime().replace("-", "");
			civilizedEvaluation.setEndTime(time2);
		}
		list= civilizedService.getFormData(civilizedEvaluation);
		int total=civilizedService.getTotalData();
		return new ResultHelperEasyui(list, total, Constant.SUCCESS_CODE, Constant.SUCCESS_MSG);
	}
	
	@RequestMapping("saveToPublish.action")
	public void saveToPublish(String name,int stationId,String startTime,String endTime,String ids,HttpSession httpSession) throws Exception{
		UserEntity userEntity = (UserEntity) httpSession.getAttribute("activeUser");
		//String username=new String(name.getBytes("ISO-8859-1"));
		CivilizedPublish civilizedPublish=new CivilizedPublish();
		civilizedPublish.setDate(startTime+"~"+endTime);
		civilizedPublish.setStationId(stationId);
		civilizedPublish.setUserName(userEntity.getUserName());
		String time=DateUtil.dateToStr(DateUtil.getCurrentDate());
		civilizedPublish.setCurrentTime(time);
		civilizedPublish.setcIds(ids);
		civilizedPublishService.save(civilizedPublish);
		int orderId=civilizedPublishService.getIdByTime(time);
		String[] nos= ids.split(",");
		int status=1;
		civilizedService.update(orderId,nos);
		civilizedPublishService.updateStatus(status,orderId);
		
	}
	
	@ResponseBody
	@RequestMapping("updateStatus.action")
	public void updateStatus(int id,HttpSession httpSession) throws Exception{
		int status=2;
		//civilizedService.updateByIds(status, cIds);
		String time=DateUtil.dateToStr(DateUtil.getCurrentDate());
		UserEntity userEntity = (UserEntity) httpSession.getAttribute("activeUser");
		civilizedPublishService.update(time,userEntity.getUserName(),status,id);
	}
	
	
	@ResponseBody
	@RequestMapping("updateAllById.action")
	public void updateAllById(CivilizedEvaluation civilizedEvaluation) throws Exception{
		civilizedService.updateAllById(civilizedEvaluation);
	}
	
	
	/*@ResponseBody
	@RequestMapping("getDataByPeopleName.action")
	public List<CivilizedEvaluation> getDataByPeopleName(String peopleName,String startTime,String endTime){
		List<CivilizedEvaluation> list= civilizedService.getDataByPeopleName(peopleName,startTime,endTime);
		return list;
	}*/
	
	
	@RequestMapping("/civilizedList.action")
	public String civilizedList(){
		return "/civilizedList";
	}
	
	@ResponseBody
	@RequestMapping("getListData.action")
	public Object getListData(CivilizedPublish civilizedPublish){
		List<CivilizedEvaluation> list=null;
		list= civilizedPublishService.getListData(civilizedPublish);
		int total=civilizedPublishService.getTotalListData();
		return new ResultHelperEasyui(list, total, Constant.SUCCESS_CODE, Constant.SUCCESS_MSG);
	}
	
	@RequestMapping("/civilizedCheckedList.action")
	public String civilizedCheckedList(){
		return "/civilizedCheckedList";
	}
	
}
